# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Transifex Bot <>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-19 14:13+0000\n"
"PO-Revision-Date: 2021-06-28 00:56+0000\n"
"Last-Translator: Transifex Bot <>, 2023\n"
"Language-Team: Polish (https://app.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

msgid ":mod:`calendar` --- General calendar-related functions"
msgstr ""

msgid "**Source code:** :source:`Lib/calendar.py`"
msgstr ""

msgid ""
"This module allows you to output calendars like the Unix :program:`cal` "
"program, and provides additional useful functions related to the calendar. "
"By default, these calendars have Monday as the first day of the week, and "
"Sunday as the last (the European convention). Use :func:`setfirstweekday` to "
"set the first day of the week to Sunday (6) or to any other weekday.  "
"Parameters that specify dates are given as integers. For related "
"functionality, see also the :mod:`datetime` and :mod:`time` modules."
msgstr ""

msgid ""
"The functions and classes defined in this module use an idealized calendar, "
"the current Gregorian calendar extended indefinitely in both directions.  "
"This matches the definition of the \"proleptic Gregorian\" calendar in "
"Dershowitz and Reingold's book \"Calendrical Calculations\", where it's the "
"base calendar for all computations.  Zero and negative years are interpreted "
"as prescribed by the ISO 8601 standard.  Year 0 is 1 BC, year -1 is 2 BC, "
"and so on."
msgstr ""

msgid ""
"Creates a :class:`Calendar` object. *firstweekday* is an integer specifying "
"the first day of the week. :const:`MONDAY` is ``0`` (the default), :const:"
"`SUNDAY` is ``6``."
msgstr ""

msgid ""
"A :class:`Calendar` object provides several methods that can be used for "
"preparing the calendar data for formatting. This class doesn't do any "
"formatting itself. This is the job of subclasses."
msgstr ""

msgid ":class:`Calendar` instances have the following methods:"
msgstr ""

msgid ""
"Return an iterator for the week day numbers that will be used for one week.  "
"The first value from the iterator will be the same as the value of the :attr:"
"`firstweekday` property."
msgstr ""

msgid ""
"Return an iterator for the month *month* (1--12) in the year *year*. This "
"iterator will return all days (as :class:`datetime.date` objects) for the "
"month and all days before the start of the month or after the end of the "
"month that are required to get a complete week."
msgstr ""

msgid ""
"Return an iterator for the month *month* in the year *year* similar to :meth:"
"`itermonthdates`, but not restricted by the :class:`datetime.date` range. "
"Days returned will simply be day of the month numbers.  For the days outside "
"of the specified month, the day number is ``0``."
msgstr ""

msgid ""
"Return an iterator for the month *month* in the year *year* similar to :meth:"
"`itermonthdates`, but not restricted by the :class:`datetime.date` range. "
"Days returned will be tuples consisting of a day of the month number and a "
"week day number."
msgstr ""

msgid ""
"Return an iterator for the month *month* in the year *year* similar to :meth:"
"`itermonthdates`, but not restricted by the :class:`datetime.date` range. "
"Days returned will be tuples consisting of a year, a month and a day of the "
"month numbers."
msgstr ""

msgid ""
"Return an iterator for the month *month* in the year *year* similar to :meth:"
"`itermonthdates`, but not restricted by the :class:`datetime.date` range. "
"Days returned will be tuples consisting of a year, a month, a day of the "
"month, and a day of the week numbers."
msgstr ""

msgid ""
"Return a list of the weeks in the month *month* of the *year* as full "
"weeks.  Weeks are lists of seven :class:`datetime.date` objects."
msgstr ""

msgid ""
"Return a list of the weeks in the month *month* of the *year* as full "
"weeks.  Weeks are lists of seven tuples of day numbers and weekday numbers."
msgstr ""

msgid ""
"Return a list of the weeks in the month *month* of the *year* as full "
"weeks.  Weeks are lists of seven day numbers."
msgstr ""

msgid ""
"Return the data for the specified year ready for formatting. The return "
"value is a list of month rows. Each month row contains up to *width* months "
"(defaulting to 3). Each month contains between 4 and 6 weeks and each week "
"contains 1--7 days. Days are :class:`datetime.date` objects."
msgstr ""

msgid ""
"Return the data for the specified year ready for formatting (similar to :"
"meth:`yeardatescalendar`). Entries in the week lists are tuples of day "
"numbers and weekday numbers. Day numbers outside this month are zero."
msgstr ""

msgid ""
"Return the data for the specified year ready for formatting (similar to :"
"meth:`yeardatescalendar`). Entries in the week lists are day numbers. Day "
"numbers outside this month are zero."
msgstr ""

msgid "This class can be used to generate plain text calendars."
msgstr ""

msgid ":class:`TextCalendar` instances have the following methods:"
msgstr ""

msgid ""
"Return a month's calendar in a multi-line string. If *w* is provided, it "
"specifies the width of the date columns, which are centered. If *l* is "
"given, it specifies the number of lines that each week will use. Depends on "
"the first weekday as specified in the constructor or set by the :meth:"
"`setfirstweekday` method."
msgstr ""

msgid "Print a month's calendar as returned by :meth:`formatmonth`."
msgstr ""

msgid ""
"Return a *m*-column calendar for an entire year as a multi-line string. "
"Optional parameters *w*, *l*, and *c* are for date column width, lines per "
"week, and number of spaces between month columns, respectively. Depends on "
"the first weekday as specified in the constructor or set by the :meth:"
"`setfirstweekday` method.  The earliest year for which a calendar can be "
"generated is platform-dependent."
msgstr ""

msgid ""
"Print the calendar for an entire year as returned by :meth:`formatyear`."
msgstr ""

msgid "This class can be used to generate HTML calendars."
msgstr ""

msgid ":class:`!HTMLCalendar` instances have the following methods:"
msgstr ""

msgid ""
"Return a month's calendar as an HTML table. If *withyear* is true the year "
"will be included in the header, otherwise just the month name will be used."
msgstr ""

msgid ""
"Return a year's calendar as an HTML table. *width* (defaulting to 3) "
"specifies the number of months per row."
msgstr ""

msgid ""
"Return a year's calendar as a complete HTML page. *width* (defaulting to 3) "
"specifies the number of months per row. *css* is the name for the cascading "
"style sheet to be used. :const:`None` can be passed if no style sheet should "
"be used. *encoding* specifies the encoding to be used for the output "
"(defaulting to the system default encoding)."
msgstr ""

msgid ""
":class:`!HTMLCalendar` has the following attributes you can override to "
"customize the CSS classes used by the calendar:"
msgstr ""

msgid ""
"A list of CSS classes used for each weekday. The default class list is::"
msgstr ""

msgid "more styles can be added for each day::"
msgstr ""

msgid "Note that the length of this list must be seven items."
msgstr ""

msgid "The CSS class for a weekday occurring in the previous or coming month."
msgstr ""

msgid ""
"A list of CSS classes used for weekday names in the header row. The default "
"is the same as :attr:`cssclasses`."
msgstr ""

msgid ""
"The month's head CSS class (used by :meth:`formatmonthname`). The default "
"value is ``\"month\"``."
msgstr ""

msgid ""
"The CSS class for the whole month's table (used by :meth:`formatmonth`). The "
"default value is ``\"month\"``."
msgstr ""

msgid ""
"The CSS class for the whole year's table of tables (used by :meth:"
"`formatyear`). The default value is ``\"year\"``."
msgstr ""

msgid ""
"The CSS class for the table head for the whole year (used by :meth:"
"`formatyear`). The default value is ``\"year\"``."
msgstr ""

msgid ""
"Note that although the naming for the above described class attributes is "
"singular (e.g. ``cssclass_month`` ``cssclass_noday``), one can replace the "
"single CSS class with a space separated list of CSS classes, for example::"
msgstr ""

msgid "Here is an example how :class:`!HTMLCalendar` can be customized::"
msgstr ""

msgid ""
"This subclass of :class:`TextCalendar` can be passed a locale name in the "
"constructor and will return month and weekday names in the specified locale."
msgstr ""

msgid ""
"This subclass of :class:`HTMLCalendar` can be passed a locale name in the "
"constructor and will return month and weekday names in the specified locale."
msgstr ""

msgid ""
"The constructor, :meth:`formatweekday` and :meth:`formatmonthname` methods "
"of these two classes temporarily change the ``LC_TIME`` locale to the given "
"*locale*. Because the current locale is a process-wide setting, they are not "
"thread-safe."
msgstr ""

msgid "For simple text calendars this module provides the following functions."
msgstr ""

msgid ""
"Sets the weekday (``0`` is Monday, ``6`` is Sunday) to start each week. The "
"values :const:`MONDAY`, :const:`TUESDAY`, :const:`WEDNESDAY`, :const:"
"`THURSDAY`, :const:`FRIDAY`, :const:`SATURDAY`, and :const:`SUNDAY` are "
"provided for convenience. For example, to set the first weekday to Sunday::"
msgstr ""

msgid "Returns the current setting for the weekday to start each week."
msgstr ""

msgid ""
"Returns :const:`True` if *year* is a leap year, otherwise :const:`False`."
msgstr ""

msgid ""
"Returns the number of leap years in the range from *y1* to *y2* (exclusive), "
"where *y1* and *y2* are years."
msgstr ""

msgid "This function works for ranges spanning a century change."
msgstr ""

msgid ""
"Returns the day of the week (``0`` is Monday) for *year* (``1970``--...), "
"*month* (``1``--``12``), *day* (``1``--``31``)."
msgstr ""

msgid ""
"Return a header containing abbreviated weekday names. *n* specifies the "
"width in characters for one weekday."
msgstr ""

msgid ""
"Returns weekday of first day of the month and number of days in month,  for "
"the specified *year* and *month*."
msgstr ""

msgid ""
"Returns a matrix representing a month's calendar.  Each row represents a "
"week; days outside of the month are represented by zeros. Each week begins "
"with Monday unless set by :func:`setfirstweekday`."
msgstr ""

msgid "Prints a month's calendar as returned by :func:`month`."
msgstr ""

msgid ""
"Returns a month's calendar in a multi-line string using the :meth:"
"`formatmonth` of the :class:`TextCalendar` class."
msgstr ""

msgid ""
"Prints the calendar for an entire year as returned by  :func:`calendar`."
msgstr ""

msgid ""
"Returns a 3-column calendar for an entire year as a multi-line string using "
"the :meth:`formatyear` of the :class:`TextCalendar` class."
msgstr ""

msgid ""
"An unrelated but handy function that takes a time tuple such as returned by "
"the :func:`~time.gmtime` function in the :mod:`time` module, and returns the "
"corresponding Unix timestamp value, assuming an epoch of 1970, and the POSIX "
"encoding.  In fact, :func:`time.gmtime` and :func:`timegm` are each others' "
"inverse."
msgstr ""

msgid "The :mod:`calendar` module exports the following data attributes:"
msgstr ""

msgid "An array that represents the days of the week in the current locale."
msgstr ""

msgid ""
"An array that represents the abbreviated days of the week in the current "
"locale."
msgstr ""

msgid ""
"An array that represents the months of the year in the current locale.  This "
"follows normal convention of January being month number 1, so it has a "
"length of 13 and  ``month_name[0]`` is the empty string."
msgstr ""

msgid ""
"An array that represents the abbreviated months of the year in the current "
"locale.  This follows normal convention of January being month number 1, so "
"it has a length of 13 and  ``month_abbr[0]`` is the empty string."
msgstr ""

msgid ""
"Aliases for day numbers, where ``MONDAY`` is ``0`` and ``SUNDAY`` is ``6``."
msgstr ""

msgid "Module :mod:`datetime`"
msgstr ""

msgid ""
"Object-oriented interface to dates and times with similar functionality to "
"the :mod:`time` module."
msgstr ""

msgid "Module :mod:`time`"
msgstr ""

msgid "Low-level time related functions."
msgstr ""
